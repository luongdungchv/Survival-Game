#pragma kernel CSMain

struct Props{
    float3 pos, normal;
    float4x4 trs;
    int color;
};
RWStructuredBuffer<Props> inputGrassBuffer;
RWStructuredBuffer<uint> drawBuffer;
AppendStructuredBuffer<Props> culledGrassBuffer;
float3 camPos;
float culledDist;
float4x4 vp;

[numthreads(64,1,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    float4 pos = float4(inputGrassBuffer[id.x].pos, 1);
    
    float4 viewspace = mul(vp, pos);
    float4 clipspace = viewspace;
    float x = clipspace.x;
    float y = clipspace.y;
    float z = clipspace.z;
    float w = clipspace.w + 0.3;
    
    bool inView = !(x < -w || x > w|| y < -w || y > w || z < -w || z > w);
    float3 d = camPos - pos.xyz;
    float dist = d.x*d.x + d.y*d.y + d.z*d.z;
    bool withinDist = dist < culledDist;

    if(inView && withinDist) {
        culledGrassBuffer.Append(inputGrassBuffer[id.x]);
    }
}
